# 对象：字典（键值对）   需求：{name:"张三"}

#"""单字典"""
# 第一种写法 直接写字典
#{name: "张三"}

# 第二种写法 键名+冒号+空格+值
#name: "李四"

#"""字典嵌套字典"""  如：{name:"张三", data:{"age": 18, "height":16.5}}
#name: "张三"
#data:
# age: 18
# height: 16.5

# {name:"张三", data:{"age": 18, "height":{a:c,d:{u:a}}}}
#name: "张三"
#data:
# age: 18
# height:
#  a: "c"
#  d:
#    u: a

# 口诀：值为字典或列表，空格+换行+缩进

# 区分大小写，如果键名重复，最后一次出现的值将替换前一次出现的值
#name: "王五"
#Name: "赵六"
#name: "孙七"

# 缩进 需求：{a:{c:{a:{c:{d:{a:{d:d}}}}}},b:{d:{a:c}}}
#{'a': {'c': {'a': {'c': {'d': {'a': {'d': 'd'}}}}}}, 'b': {'d': {'a': 'c'}}}
#a:
# c:
#  a:
#   c:
#    d:
#      a:
#                      d: d
#b:
#  d:
#   a: c


# 数组(list) 语法：杠(-)+空格+元素
# 需求1 单纯列表：[1,2,3]  第一种写法 杠(-)+空格+元素
#- 1
#- 2
#- 3

# 第二种写法 直接写列表
#[2,3,4]

# 列表口诀：几个同级几个杠(-),值为字典或列表 空格+换行+缩进

# 列表嵌套列表 [1,2,[3,4,5],[7,8,9]]
#- 1
#- 2
#-
#  - 3
#  - 4
#  - 5
#-
#  - 7
#  - 8
#  - 9


# 列表嵌套字典 [1,2,3,{a:c,d:[1,2,3,{d:a}]}]
# [1, 2, 3, {'a': 'c,', 'd': [1, 2, 3, {'d': 'a'}]}]
#- 1
#- 2
#- 3
#-
#  a: c,
#  d:
#    - 1
#    - 2
#    - 3
#    -
#      d: a

# 字典嵌套列表 {a:[1,2,{a:[1,8,9]},d]}
#a:
# - 1
# - 2
# -
#  a:
#    - 1
#    - 8
#    - 9
# - d

# 练习 [1,{a:[1,{d:d}]},{a:[a,[a,b]]},2,[3,4,[5]]]
#[1, {'a': [1, {'d': 'd'}]}, {'a': ['a', ['a', 'b']]}, 2, [3, 4, [5]]]
#- 1
#-
#  a:
#    - 1
#    -
#      d: d
#-
#  a:
#    - a
#    -
#      - a
#      - b
#- 2
#-
#  - 3
#  - 4
#  -
#    - 5


# 纯量  包含：字符串，布尔值，整数，浮点数，Null，日期

# 字符串
#name: "张三"
#name: 张三

# 布尔值
#flag: true
#flag: True
#flag: TRUE
# 错误的写法
#flag: TrUE

# 整数
#num: 1

# 浮点数
#number: 1.23
#number: 1.123456789123456789

# Null
#data: null
#data: NULL
#data: Null
# 错误
#data: None
#data: ~
#data:

# 日期
#date: 2018-12-12 00:00:00
#date: 2018-12-12 00:00:00.999999
# 错误写法
#date: 2018-12-12 00:00:00:999999

# 锚点使用 及 引用
# 设置锚点格式 ：&指定字母
# 引用锚点格式： <<: *指定字母
#data: &hello
#  age: 18
#  height: 160
#data02:
#  name: "张三"
#  <<: *hello



